// Code generated by goctl. DO NOT EDIT.
// Source: jocker.proto

package jockerd

import (
	"context"

	"github.com/jaronnie/jocker/jockerd/jockerdpb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Container             = jockerdpb.Container
	Empty                 = jockerdpb.Empty
	ServerVersionResponse = jockerdpb.ServerVersionResponse

	Jockerd interface {
		ServerVersion(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServerVersionResponse, error)
		Container(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Container, error)
	}

	defaultJockerd struct {
		cli zrpc.Client
	}
)

func NewJockerd(cli zrpc.Client) Jockerd {
	return &defaultJockerd{
		cli: cli,
	}
}

func (m *defaultJockerd) ServerVersion(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServerVersionResponse, error) {
	client := jockerdpb.NewJockerdClient(m.cli.Conn())
	return client.ServerVersion(ctx, in, opts...)
}

func (m *defaultJockerd) Container(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Container, error) {
	client := jockerdpb.NewJockerdClient(m.cli.Conn())
	return client.Container(ctx, in, opts...)
}
